Entrenant el model...
[[2. 1. 5. ... 3. 2. 0.]
 [0. 1. 1. ... 1. 1. 1.]
 [3. 4. 2. ... 2. 3. 4.]
 ...
 [2. 2. 1. ... 3. 2. 1.]
 [0. 1. 3. ... 2. 2. 1.]
 [0. 0. 0. ... 1. 0. 1.]] [0 0 0 ... 4 4 4]
Traceback (most recent call last):
  File "/home/grau/github-classroom/DCC-UAB/ACproject-15-grup/src/Primer model/controller.py", line 125, in <module>
    main()
  File "/home/grau/github-classroom/DCC-UAB/ACproject-15-grup/src/Primer model/controller.py", line 106, in main
    model, best_params = train_xgboost(bow_train, labels_train)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/grau/github-classroom/DCC-UAB/ACproject-15-grup/src/Primer model/train_test.py", line 66, in train_xgboost
    model.fit(X_train, y_train)
  File "/home/grau/myenv/lib/python3.12/site-packages/sklearn/base.py", line 1473, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/grau/myenv/lib/python3.12/site-packages/sklearn/multiclass.py", line 370, in fit
    self.estimators_ = Parallel(n_jobs=self.n_jobs, verbose=self.verbose)(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/grau/myenv/lib/python3.12/site-packages/sklearn/utils/parallel.py", line 74, in __call__
    return super().__call__(iterable_with_config)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/grau/myenv/lib/python3.12/site-packages/joblib/parallel.py", line 1918, in __call__
    return output if self.return_generator else list(output)
                                                ^^^^^^^^^^^^
  File "/home/grau/myenv/lib/python3.12/site-packages/joblib/parallel.py", line 1847, in _get_sequential_output
    res = func(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/grau/myenv/lib/python3.12/site-packages/sklearn/utils/parallel.py", line 136, in __call__
    return self.function(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/grau/myenv/lib/python3.12/site-packages/sklearn/multiclass.py", line 93, in _fit_binary
    estimator.fit(X, y, **fit_params)
  File "/home/grau/myenv/lib/python3.12/site-packages/xgboost/core.py", line 726, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/home/grau/myenv/lib/python3.12/site-packages/xgboost/sklearn.py", line 1531, in fit
    self._Booster = train(
                    ^^^^^^
  File "/home/grau/myenv/lib/python3.12/site-packages/xgboost/core.py", line 726, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/home/grau/myenv/lib/python3.12/site-packages/xgboost/training.py", line 181, in train
    bst.update(dtrain, iteration=i, fobj=obj)
  File "/home/grau/myenv/lib/python3.12/site-packages/xgboost/core.py", line 2100, in update
    _check_call(
  File "/home/grau/myenv/lib/python3.12/site-packages/xgboost/core.py", line 284, in _check_call
    raise XGBoostError(py_str(_LIB.XGBGetLastError()))
xgboost.core.XGBoostError: value 0 for Parameter num_class should be greater equal to 1
num_class: Number of output class in the multi-class classification.
